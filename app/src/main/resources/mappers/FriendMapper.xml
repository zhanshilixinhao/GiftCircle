<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chouchongkeji.dial.dao.friend.FriendMapper">
    <resultMap id="BaseResultMap" type="com.chouchongkeji.dial.pojo.friend.Friend">
        <constructor>
            <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="friend_user_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="relationship" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="group_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="sort" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="created" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="updated" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_id, friend_user_id, remark, relationship, group_id, sort, created, updated
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from friend
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByUserIdAndFriendUserId" resultType="com.chouchongkeji.service.user.friend.vo.FriendVo">
        SELECT
        *
        FROM
        v_friend
        WHERE
        user_id = #{userId}
        AND friend_user_id = #{friendUserId}
    </select>
    <select id="selectByUserIdAndGroupId" resultType="com.chouchongkeji.service.user.friend.vo.FriendItem">
        SELECT
        *
        FROM
        v_friend
        WHERE
        user_id = #{userId}
        and friend_user_id != #{userId}
        <if test="groupId!=null">
            and group_id = #{groupId}
        </if>
    </select>
    <select id="selectBySearch" resultType="com.chouchongkeji.service.user.friend.vo.FriendBase">
        select *
        from  (
          SELECT
	a.id AS user_id,
	a.avatar,
	a.nickname,
	(b.id is NULL) + 1 as is_friend
FROM
	app_user a
	LEFT JOIN friend b ON b.user_id = #{userId}
	AND b.friend_user_id = a.id
WHERE
	a.phone = #{phone}
	UNION
	SELECT
	a.id AS user_id,
	a.avatar,
	a.nickname,
	(b.id is NULL) + 1 as is_friend
FROM
	app_user a
	LEFT JOIN friend b ON b.user_id = #{userId}
	AND b.friend_user_id = a.id
WHERE
	a.nickname LIKE concat('%', #{phone},'%')
              ) h
        <where>
            <trim suffixOverrides="and">
                <if test="type != null and type != ''">
                    h.is_friend = #{type}
                </if>
            </trim>
        </where>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from friend
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByUserIdAndFriendUserId">
DELETE
FROM
	friend
WHERE
	( user_id = #{userId} AND friend_user_id = #{friendUserId} )
	OR ( user_id = #{friendUserId} AND friend_user_id = #{userId} )
    </delete>
    <insert id="insert" parameterType="com.chouchongkeji.dial.pojo.friend.Friend">
    insert ignore into friend (id, user_id, friend_user_id,
      remark, relationship, group_id,
      sort, created, updated
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{friendUserId,jdbcType=INTEGER},
      #{remark,jdbcType=VARCHAR}, #{relationship,jdbcType=VARCHAR}, #{groupId,jdbcType=INTEGER},
      #{sort,jdbcType=INTEGER}, now(), now()
      )
  </insert>
    <insert id="insertSelective" parameterType="com.chouchongkeji.dial.pojo.friend.Friend">
        insert into friend
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="friendUserId != null">
                friend_user_id,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="relationship != null">
                relationship,
            </if>
            <if test="groupId != null">
                group_id,
            </if>
            <if test="sort != null">
                sort,
            </if>
            <if test="created != null">
                created,
            </if>
            <if test="updated != null">
                updated,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="friendUserId != null">
                #{friendUserId,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="relationship != null">
                #{relationship,jdbcType=VARCHAR},
            </if>
            <if test="groupId != null">
                #{groupId,jdbcType=INTEGER},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="created != null">
                #{created,jdbcType=TIMESTAMP},
            </if>
            <if test="updated != null">
                #{updated,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.chouchongkeji.dial.pojo.friend.Friend">
        update friend
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="friendUserId != null">
                friend_user_id = #{friendUserId,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="relationship != null">
                relationship = #{relationship,jdbcType=VARCHAR},
            </if>
            <if test="groupId != null">
                group_id = #{groupId,jdbcType=INTEGER},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="created != null">
                created = #{created,jdbcType=TIMESTAMP},
            </if>
            <if test="updated != null">
                updated = #{updated,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.chouchongkeji.dial.pojo.friend.Friend">
    update friend
    set user_id = #{userId,jdbcType=INTEGER},
      friend_user_id = #{friendUserId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      relationship = #{relationship,jdbcType=VARCHAR},
      group_id = #{groupId,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateMoveToGroup">
        update friend
        set group_id = #{newGroupId}
        where user_id = #{userId}
        and group_id = #{groupId}
    </update>
</mapper>
