<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chouchongkeji.dial.dao.backpack.BpItemMapper">
    <resultMap id="BaseResultMap" type="com.chouchongkeji.dial.pojo.backpack.BpItem">
        <constructor>
            <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="target_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="quantity" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL"/>
            <arg column="from" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="type" javaType="java.lang.Byte" jdbcType="TINYINT"/>
            <arg column="created" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="updated" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_id, target_id, quantity, price, `from`, `type`, created, updated
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from bp_item
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from bp_item
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.chouchongkeji.dial.pojo.backpack.BpItem">
    insert into bp_item (id, user_id, target_id, 
      quantity, price, from, 
      type, created, updated
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=INTEGER}, #{targetId,jdbcType=INTEGER}, 
      #{quantity,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}, #{from,jdbcType=VARCHAR}, 
      #{type,jdbcType=TINYINT},  now(), now()
      )
  </insert>
    <insert id="insertSelective" parameterType="com.chouchongkeji.dial.pojo.backpack.BpItem">
        insert into bp_item
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="targetId != null">
                target_id,
            </if>
            <if test="quantity != null">
                quantity,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="from != null">
                from,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="created != null">
                created,
            </if>
            <if test="updated != null">
                updated,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="targetId != null">
                #{targetId,jdbcType=INTEGER},
            </if>
            <if test="quantity != null">
                #{quantity,jdbcType=INTEGER},
            </if>
            <if test="price != null">
                #{price,jdbcType=DECIMAL},
            </if>
            <if test="from != null">
                #{from,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=TINYINT},
            </if>
            <if test="created != null">
                #{created,jdbcType=TIMESTAMP},
            </if>
            <if test="updated != null">
                #{updated,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <insert id="insertBatch">
        insert into bp_item (id, user_id, target_id,
        quantity, price, `from`,
        type, created, updated
        )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id,jdbcType=BIGINT}, #{item.userId,jdbcType=INTEGER}, #{item.targetId,jdbcType=INTEGER},
            #{item.quantity,jdbcType=INTEGER}, #{item.price,jdbcType=DECIMAL}, #{item.from,jdbcType=VARCHAR},
            #{item.type,jdbcType=TINYINT}, now(), now()
            )
        </foreach>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.chouchongkeji.dial.pojo.backpack.BpItem">
        update bp_item
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="targetId != null">
                target_id = #{targetId,jdbcType=INTEGER},
            </if>
            <if test="quantity != null">
                quantity = #{quantity,jdbcType=INTEGER},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="from != null">
                from = #{from,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=TINYINT},
            </if>
            <if test="created != null">
                created = #{created,jdbcType=TIMESTAMP},
            </if>
            <if test="updated != null">
                updated = #{updated,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.chouchongkeji.dial.pojo.backpack.BpItem">
    update bp_item
    set user_id = #{userId,jdbcType=INTEGER},
      target_id = #{targetId,jdbcType=INTEGER},
      quantity = #{quantity,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      from = #{from,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="selectByUserIdAndBpItemId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        `bp_item`
        WHERE
        id = #{bpId}
        AND user_id = #{userId}
        and quantity &gt; 0
    </select>
    <select id="selectAllByUserId" resultType="com.chouchongkeji.dial.pojo.backpack.Vbp">
select *
from v_bp
where  user_id = #{userId} and `type` = #{type} and quantity > 0
    </select>

</mapper>