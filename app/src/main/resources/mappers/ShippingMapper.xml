<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chouchongkeji.dial.dao.iwant.receiveAddress.ShippingMapper">
  <resultMap id="BaseResultMap" type="com.chouchongkeji.dial.pojo.iwant.receiveAddress.Shipping">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="consignee_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="address" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="phone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="address_detail" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="adcode" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="status" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="created" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="updated" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, consignee_name, address, phone, address_detail, adcode, status, created,
    updated
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from shipping
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from shipping
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.chouchongkeji.dial.pojo.iwant.receiveAddress.Shipping">
    insert into shipping (id, user_id, consignee_name,
      address, phone, address_detail,
      adcode, status, created,
      updated)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{consigneeName,jdbcType=VARCHAR},
      #{address,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{addressDetail,jdbcType=VARCHAR},
      #{adcode,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, #{created,jdbcType=TIMESTAMP},
      #{updated,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.chouchongkeji.dial.pojo.iwant.receiveAddress.Shipping">
    insert into shipping
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="consigneeName != null">
        consignee_name,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="addressDetail != null">
        address_detail,
      </if>
      <if test="adcode != null">
        adcode,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updated != null">
        updated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="consigneeName != null">
        #{consigneeName,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="addressDetail != null">
        #{addressDetail,jdbcType=VARCHAR},
      </if>
      <if test="adcode != null">
        #{adcode,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.chouchongkeji.dial.pojo.iwant.receiveAddress.Shipping">
    update shipping
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="consigneeName != null">
        consignee_name = #{consigneeName,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="addressDetail != null">
        address_detail = #{addressDetail,jdbcType=VARCHAR},
      </if>
      <if test="adcode != null">
        adcode = #{adcode,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chouchongkeji.dial.pojo.iwant.receiveAddress.Shipping">
    update shipping
    set user_id = #{userId,jdbcType=INTEGER},
      consignee_name = #{consigneeName,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      address_detail = #{addressDetail,jdbcType=VARCHAR},
      adcode = #{adcode,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--获得收货地址列表-->
  <select id="selectListByUserId" resultType="com.chouchongkeji.service.iwant.receiveAddress.vo.ShippingListVo">
    SELECT
    id as id,
    address_detail as addressDetail,
    phone as phone,
    status as status,
    address,
    adcode,
    consignee_name as consigneeName
    FROM
    shipping
    WHERE
    user_id = #{userId} AND status != 3
    ORDER BY
    created DESC
  </select>

  <!--获得当前用户的默认地址-->
  <select id="selectByDefaultStatus" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"></include>
    FROM
    shipping
    WHERE
    user_id = #{userId} AND status = 2
  </select>
    <select id="selectByShippingId" resultMap="BaseResultMap">
SELECT
	<include refid="Base_Column_List"/>
FROM
	shipping
WHERE
	id = #{shippingId}
    </select>
</mapper>
