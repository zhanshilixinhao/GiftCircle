<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chouchongkeji.dial.dao.user.InviteUserMapper">
  <resultMap id="BaseResultMap" type="com.chouchongkeji.dial.pojo.user.InviteUser">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="parent_user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="created" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="updated" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, parent_user_id, created, updated
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from invite_user
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="selectAllList" resultType="com.chouchongkeji.service.iwant.wallet.vo.InviteUserVo">
      select a.id,
       a.user_id,
       a.parent_user_id,
       a.created,
       b.nickname,
       b.avatar
from invite_user a
         left join app_user b on a.user_id = b.id
where a.parent_user_id = #{userId}
    </select>
    <select id="selectByUserId" resultType="com.chouchongkeji.dial.pojo.user.InviteUser">
      select
      <include refid="Base_Column_List" />
      from invite_user
      where user_id = #{userId}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from invite_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.chouchongkeji.dial.pojo.user.InviteUser" keyProperty="id" useGeneratedKeys="true">
    insert into invite_user (id, user_id, parent_user_id, 
      created, updated)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{parentUserId,jdbcType=INTEGER}, 
      now(), now())
  </insert>
  <insert id="insertSelective" parameterType="com.chouchongkeji.dial.pojo.user.InviteUser">
    insert into invite_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="parentUserId != null">
        parent_user_id,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updated != null">
        updated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="parentUserId != null">
        #{parentUserId,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.chouchongkeji.dial.pojo.user.InviteUser">
    update invite_user
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="parentUserId != null">
        parent_user_id = #{parentUserId,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chouchongkeji.dial.pojo.user.InviteUser">
    update invite_user
    set user_id = #{userId,jdbcType=INTEGER},
      parent_user_id = #{parentUserId,jdbcType=INTEGER},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>