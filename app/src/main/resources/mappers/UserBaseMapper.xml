<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chouchongkeji.dao.user.UserBaseMapper">
  <resultMap id="BaseResultMap" type="com.chouchongkeji.pojo.user.UserBase">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="account" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="phone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="avatar" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="nickname" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="type" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="status" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="last_ip" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="last_clien" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="created" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="updated" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, password, account, phone, avatar, nickname, type, status, last_ip, last_clien,
    created, updated
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_base
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByAccount" resultType="com.chouchongkeji.pojo.user.UserBase">
SELECT
	<include refid="Base_Column_List"/>
FROM
	user_base
WHERE
	account = #{username}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_base
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.chouchongkeji.pojo.user.UserBase">
    insert into user_base (id, password, account, 
      phone, avatar, nickname,
      type, status, last_ip, 
      last_clien, created, updated
      )
    values (#{id,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR},
      #{type,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, #{lastIp,jdbcType=VARCHAR}, 
      #{lastClien,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.chouchongkeji.pojo.user.UserBase">
    insert into user_base
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="lastIp != null">
        last_ip,
      </if>
      <if test="lastClien != null">
        last_clien,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updated != null">
        updated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="lastIp != null">
        #{lastIp,jdbcType=VARCHAR},
      </if>
      <if test="lastClien != null">
        #{lastClien,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.chouchongkeji.pojo.user.UserBase">
    update user_base
    <set>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="lastIp != null">
        last_ip = #{lastIp,jdbcType=VARCHAR},
      </if>
      <if test="lastClien != null">
        last_clien = #{lastClien,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chouchongkeji.pojo.user.UserBase">
    update user_base
    set password = #{password,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      last_ip = #{lastIp,jdbcType=VARCHAR},
      last_clien = #{lastClien,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>