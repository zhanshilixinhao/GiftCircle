<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chouchongkeji.dial.dao.friend.FriendGroupMapper">
    <resultMap id="BaseResultMap" type="com.chouchongkeji.dial.pojo.friend.FriendGroup">
        <constructor>
            <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="sort" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="created" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="updated" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_id, name, sort, created, updated
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from friend_group
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByUserIdAndGroupName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from friend_group
        where user_id = #{userId} and `name` = #{groupName}
    </select>
    <select id="selectByUserId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from friend_group
        where user_id = #{userId}
    </select>
    <select id="selectCountByUserId" resultType="java.lang.Integer">
      select count(id)
from friend_group
where user_id = #{userId}

    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from friend_group
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByPrimaryKeyAndUserId">
        delete from friend_group
        where id = #{groupId} and user_id = #{userId}
    </delete>
    <insert id="insert" parameterType="com.chouchongkeji.dial.pojo.friend.FriendGroup" useGeneratedKeys="true"
            keyProperty="id">
    insert into friend_group (id, user_id, name,
      sort, created, updated
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
      #{sort,jdbcType=INTEGER}, now(), now()
      )
  </insert>
    <insert id="insertSelective" parameterType="com.chouchongkeji.dial.pojo.friend.FriendGroup">
        insert into friend_group
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="sort != null">
                sort,
            </if>
            <if test="created != null">
                created,
            </if>
            <if test="updated != null">
                updated,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="created != null">
                #{created,jdbcType=TIMESTAMP},
            </if>
            <if test="updated != null">
                #{updated,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.chouchongkeji.dial.pojo.friend.FriendGroup">
        update friend_group
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="created != null">
                created = #{created,jdbcType=TIMESTAMP},
            </if>

            updated = now(),

        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.chouchongkeji.dial.pojo.friend.FriendGroup">
    update friend_group
    set user_id = #{userId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
